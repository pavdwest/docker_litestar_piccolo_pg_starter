services:
  database-host:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_USER: ${DATABASE_HOST_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_HOST_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PORT: 5432
    ports:
      # Expose on different port to prevent conflict with local
      - '6543:5432'
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_HOST_USERNAME} -d ${DATABASE_NAME}"]
      interval: 2s
      timeout: 60s
      retries: 20
      start_period: 2s
    volumes:
      - database-host-data:/var/lib/postgresql/data/

  backend:
    build: ./services/backend
    restart: unless-stopped
    depends_on:
      database-host:
        condition: service_healthy
    working_dir: /app
    environment:
      WATCHFILES_FORCE_POLLING: true
      PYTHONBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      PROJECT_NAME: Project
      DATABASE_HOST_NAME: database-host
      DATABASE_HOST_PORT: 5432
      DATABASE_HOST_USERNAME: ${DATABASE_HOST_USERNAME}
      DATABASE_HOST_PASSWORD: ${DATABASE_HOST_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    ports:
      - '8000:8000'
    volumes:
      - ./services/backend/app:/app
      - /app/.venv
      - /app/.pytest_cache
    command: uv run litestar --app src.main:app run --host=0.0.0.0 --port=8000 --reload

volumes:
  database-host-data:
    driver: local
